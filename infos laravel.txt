00:40 15/03/2019

// --------------------------------------------------------------------------------
// Instalação do Laravel 5.6
// --------------------------------------------------------------------------------
https://laravel.com/docs/5.6
https://laravel.com/docs/5.8

# Via Composer Create-Project

composer create-project --prefer-dist laravel/laravel blog

Instalar o Laravel escolhendo uma versão específica:
composer create-project --prefer-dist laravel/laravel blog "5.6.*"

# Via Laravel Installer (maneira mais simples)
Passo 1:
composer global require laravel/installer

Passo 2:
incluir o seguinte caminho no Path do Windows:
%USERPROFILE%\AppData\Roaming\Composer\vendor\bin

Passo 3:
Após a instalação do instalador e inclusão no Path, basta fazer o comando:
lavarel new nome-projeto

Rodar o server do Laravel:
php artisan serve
O projeto ficará disponível no caminho: http://127.0.0.1:8000/

-----------------------------------------------------

Comandos importantes:
COMANDO 									DESCRICAO
composer dump-autoload						Dumps the autoloader
composer install							Rebuild vendor folder
php artisan make:controller Nome 			Create a new controller class

// --------------------------------------------------------------------------------
// 4 Config de VirtualHost
// --------------------------------------------------------------------------------
XAMPP: xampp » apache » conf » extra » httpd-vhosts.conf
Windows: C:\Windows\System32\drivers\etc\hosts

No arquivo do XAMPP deve adicionar:

<VirtualHost *:80>
    DocumentRoot "C:\xampp\htdocs\projeto-laravel\public"
    ServerName teste-laravel.com
	DirectoryIndex index.php
	<Directory "C:\xampp\htdocs\projeto-laravel\public">
		Options All
		AllowOverride All
		Order Allow,Deny
		Allow from all
	</Directory>
</VirtualHost>

No arquivo do Windows (host), adicionar o IP e o nome do ServerName
127.0.0.1	teste-laravel.com


// --------------------------------------------------------------------------------
// 5 Instalação do Redis xxx (ver este capítulo novamente)
// --------------------------------------------------------------------------------

Instalação do Docker
https://hub.docker.com/editions/community/docker-ce-desktop-windows

// --------------------------------------------------------------------------------
// 9 IDE Visual Studio Code e Extensions
// --------------------------------------------------------------------------------

Indicação de 4 extensões:
- DotENV (mikestead)
- Laravel 5 Snippets (Winnie Lin)
- Laravel Blade Snippets (Winnie Lin)
- PHP Intelephense (Ben Mewburn)

// --------------------------------------------------------------------------------
// 11 (antigo 13) Rotas
// --------------------------------------------------------------------------------

Ver toas as rotas existentes:
php artisan route:list

Resultado no CMD:
+--------+----------+----------------------------+------+---------+--------------+
| Domain | Method   | URI                        | Name | Action  | Middleware   |
+--------+----------+----------------------------+------+---------+--------------+
|        | GET|HEAD | /                          |      | Closure | web          |
|        | GET|HEAD | api/user                   |      | Closure | api,auth:api |
+--------+----------+----------------------------+------+---------+--------------+

Route::get('/', function () {
    return view('welcome'); -----------------------------------| chama uma view
});

Route::get('/ola', function () {
    return "<h1>Seja bem vindo!!</h1>";
});


// ---------------------------------------------------------------------------
// 14 Passar parâmetros para as rotas:
// ---------------------------------------------------------------------------

// Params restringidos | Rotas com regras
Route::get('/seunomecomregra/{nome}/{n}', function($nome, $n) {
    for($i=0; $i<$n; $i++) {
        echo "<h1>Ol? $nome: $i </h1>";
    }    
})->where('n', '[0-9]+')->where('nome', '[A-Za-z]+');

// Sem restrição (param opcional)
Route::get('/seunomesemregra/{nome?}', function($nome=null) { // ----------------------| a interrogacao torna o param opcional
    if(isset($nome)) {
        echo "<h1>Ol? $nome";
    } else
        echo "Voce n? passou nenhum nome";
})->where('n', '[0-9]+')->where('nome', '[A-Za-z]+');


// ---------------------------------------------------------------------------
// 14 Agrupamento e rotas
// ---------------------------------------------------------------------------

Route::prefix('app')->group(function() {
    Route::get('/', function() {
       return "P?ine principal do APP";
    });
    Route::get('/profile', function() {
        return "P?ine profile  do APP";
    });
    Route::get('/about', function() {
        return "P?ine ABOUT do APP";
    });
});

php artisan route:list
+--------+----------+----------------------------+------+---------+--------------+
| Domain | Method   | URI                        | Name | Action  | Middleware   |
+--------+----------+----------------------------+------+---------+--------------+
|        | GET|HEAD | /                          |      | Closure | web          |
|        | GET|HEAD | api/user                   |      | Closure | api,auth:api |
|        | GET|HEAD | app                        |      | Closure | web          |
|        | GET|HEAD | app/about                  |      | Closure | web          |
|        | GET|HEAD | app/profile                |      | Closure | web          |
|        | GET|HEAD | nome/{nome}/{sobrenome}    |      | Closure | web          |
|        | GET|HEAD | ola                        |      | Closure | web          |
|        | GET|HEAD | ola/sejabemvindo           |      | Closure | web          |
|        | GET|HEAD | repetir/{nome}/{n}         |      | Closure | web          |
|        | GET|HEAD | seunomecomregra/{nome}/{n} |      | Closure | web          |
|        | GET|HEAD | seunomesemregra/{nome?}    |      | Closure | web          |
+--------+----------+----------------------------+------+---------+--------------+


// ---------------------------------------------------------------------------
// 17 Méodos HTTP :: https://developer.mozilla.org/pt-BR/docs/Web/HTTP/Methods
// ---------------------------------------------------------------------------

O protocolo HTTP define um conjunto de métodos de requisição responsáveis por indicar a ação a ser executada para um dado recurso. Embora esses métodos possam ser descritos como substantivos, eles também são comumente referenciados como HTTP Verbs (Verbos HTTP). Cada um deles implementa uma sem?tica diferente, mas alguns recursos são compartilhados por um grupo deles, como por exemplo, qualquer método de requisi?o pode ser do tipo safe, idempotent ou cacheable.

# GET
O método GET solicita a representa?o de um recurso espec?ico. Requisi?es utilizando o método GET devem retornar apenas dados.

# HEAD
 O método HEAD solicita uma resposta de forma id?tica ao método GET, por? sem conter o corpo da resposta.

# POST
O método POST ?utilizado para submeter uma entidade a um recurso espec?ico, frequentemente causando uma mudan? no estado do recurso ou efeitos colaterais no servidor.

# PUT
O método PUT substitui todas as atuais representa?es do recurso de destino pela carga de dados da requisi?o.

# DELETE
O método DELETE remove um recurso espec?ico.

# CONNECT
O método CONNECT estabelece um t?nel para o servidor identificado pelo recurso de destino.

# OPTIONS
O méodo OPTIONS ?usado para descrever as op?es de comunicação com o recurso de destino.

# TRACE
O método TRACE executa um teste de chamada loop-back junto com o caminho para o recurso de destino.

# PATCH
O método PATCH é utilizado para aplicar modificações parciais em um recurso.


=> Instalação da extensão do Google Chrome "Advanced REST Clien" by advancedrestclient.com
Acessar :: chrome://apps (no navegador e escolher o ARC)

LISTAS DE STATUS HTTP
- https://developer.mozilla.org/pt-BR/docs/Web/HTTP/Status
- https://pt.wikipedia.org/wiki/Lista_de_c%C3%B3digos_de_estado_HTTP
- https://en.wikipedia.org/wiki/List_of_HTTP_status_codes

POST ::
    Ao tentar enviar por post, recebemos um erro 419. Isto se d?por conta do Laravel. Para solucionar, apenas para este exerc?io, isto precisa alterar o arquivo:
    app >> Http >> Middleware >> VerifyCsrfToken.php
    ...
    protected $except = [
        '/rest*'
    ];
    ...
    
php artisan Route:list
+--------+----------------------------------------+------------------------------+------+---------------------------------------+--------------+
| Domain | Method                                 | URI                          | Name | Action                                | Middleware   |
+--------+----------------------------------------+------------------------------+------+---------------------------------------+--------------+
|        | GET|HEAD                               | /                            |      | Closure                               | web          |
|        | GET|HEAD                               | api/user                     |      | Closure                               | api,auth:api |
|        | GET|HEAD                               | app                          |      | Closure                               | web          |
|        | GET|HEAD                               | app/about                    |      | Closure                               | web          |
|        | GET|HEAD                               | app/profile                  |      | Closure                               | web          |
|        | GET|HEAD|POST|PUT|PATCH|DELETE|OPTIONS | aqui                         |      | Illuminate\Routing\RedirectController | web          |
|        | GET|HEAD                               | hello                        |      | Illuminate\Routing\ViewController     | web          |
|        | GET|HEAD                               | hellonome/{nome}/{sobrenome} |      | Closure                               | web          |
|        | GET|HEAD                               | nome/{nome}/{sobrenome}      |      | Closure                               | web          |
|        | GET|HEAD                               | ola                          |      | Closure                               | web          |
|        | GET|HEAD                               | ola/sejabemvindo             |      | Closure                               | web          |
|        | GET|HEAD                               | repetir/{nome}/{n}           |      | Closure                               | web          |
|        | GET|HEAD                               | rest/hello                   |      | Closure                               | web          |
|        | POST                                   | rest/hello                   |      | Closure                               | web          |
|        | DELETE                                 | rest/hello                   |      | Closure                               | web          |
|        | PUT                                    | rest/hello                   |      | Closure                               | web          |
|        | PATCH                                  | rest/hello                   |      | Closure                               | web          |
|        | OPTIONS                                | rest/hello                   |      | Closure                               | web          |
|        | GET|HEAD                               | seunomecomregra/{nome}/{n}   |      | Closure                               | web          |
|        | GET|HEAD                               | seunomesemregra/{nome?}      |      | Closure                               | web          |
|        | GET|HEAD                               | viewnome                     |      | Illuminate\Routing\ViewController     | web          |
+--------+----------------------------------------+------------------------------+------+---------------------------------------+--------------+


// ---------------------------------------------------------------------------
// 18 métodos HTTP - Parte 2 ::
// ---------------------------------------------------------------------------

POST com c?igo 419 - "The page has expired due to inactivity". Please refresh and try again.
Na realidade isso ?uma prote?o do Laravel. Para alterar isso:
app >> http >> middleware >> VeriryCsrfToken.php
adicionar a rota dentro de $except. Ex:

protected $except = [
    '/rest*'
];


// ---------------------------------------------------------------------------
// 19 Requisi?es HTTP | Passar um parametro para uma rota nao GET
// ---------------------------------------------------------------------------

Como passar um parametro para uma rota que nao seja o GET?
Na requisicao que enviamos, podemos passar param atrav? do form-data
Precisa adicionar a biblioteca Request: use Illuminate\Http\Request;
usar o método POST neste enere?: http://localhost:8000/rest/imprimir

Route::post('/rest/imprimir', function(Request $req) {
    $nome = $req->input('nome');
    $idade = $req->input('idade');
    return "Hello $nome ($idade)!! (POST)";
});

// ---------------------------------------------------------------------------
// 20 Requisições HTTP | Agrupamento métodos em uma mesma regra
// ---------------------------------------------------------------------------

Atender o GET e o POST numa mesma regra.
match() ::
- vai ser os métodos que vamos atender nessa requisição
- vai configurar para a rota /rest/hello2
- na function() estipula o que irá fazer

Rout::match(['get', 'post'], '/rest/hello2', function(){
	return
});

// ---------------------------------------------------------------------------
// 21 Nomeando Rotas
// ---------------------------------------------------------------------------

Podemos nomear as rotas, assim, podemos alterar as rotas e usar sempre o mesmo name dado a ela.

Route::get('/produtos', function(){
    echo '<h1>Produtos</h1>';
    echo '<ol>';
    echo '<li>Notebook</li>';
    echo '<li>Impressora</li>';
    echo '<li>Mouse</li>';
    echo '</ol>';
})->name('meusprodutos');

// Exemplo de um conteúdo que irá chamar a rota meusprodutos
Route::get('linkprodutos', function() {
    $url = route('meusprodutos');
    echo "<a href=\"" . $url . "\">Meus produtos</a>";
});

// Redirecionar
Route::get('/redirecionarprodutos', function() {
    return redirect()->route('meusprodutos');
});

// ---------------------------------------------------------------------------
// SEÇÃO 5 Controladores | 23 MVC
// ---------------------------------------------------------------------------

Instalação de novo projeto:
composer create-project --prefer-dist laravel/laravel construtores

Criação de Controller
php artisan make:controller Nome

# Controladores Resouce

Criação de Controller com resources padrões
php artisan make:controller ClienteControlador --resource

Em routes >> web.php:
Route::resource('/cliente', 'ClienteControlador');

Funções criadas pelo comando --resource
index() - listar os registros
create() - apresentar form para adicionar novo registro
store(req) - salvar o novo registo enviado pelo create()
show(id) - getById
edit(id) - apresenta um form para editar um registro específico
update(req) - salva a info do registo enviada pelo edit(id)
destroy(id) - deleter um determinado registro

Lista das rotas geradas através deste comando:

php artisan route:list
+--------+-----------+------------------------+-----------------+-------------------------------------------------+--------------+
| Domain | Method    | URI                    | Name            | Action                                          | Middleware   |
+--------+-----------+------------------------+-----------------+-------------------------------------------------+--------------+
|        | GET|HEAD  | /                      |                 | Closure                                         | web          |
|        | GET|HEAD  | api/user               |                 | Closure                                         | api,auth:api |
|        | GET|HEAD  | cliente                | cliente.index   | App\Http\Controllers\ClienteControlador@index   | web          |
|        | POST      | cliente                | cliente.store   | App\Http\Controllers\ClienteControlador@store   | web          |
|        | GET|HEAD  | cliente/create         | cliente.create  | App\Http\Controllers\ClienteControlador@create  | web          |
|        | GET|HEAD  | cliente/{cliente}      | cliente.show    | App\Http\Controllers\ClienteControlador@show    | web          |
|        | PUT|PATCH | cliente/{cliente}      | cliente.update  | App\Http\Controllers\ClienteControlador@update  | web          |
|        | DELETE    | cliente/{cliente}      | cliente.destroy | App\Http\Controllers\ClienteControlador@destroy | web          |
|        | GET|HEAD  | cliente/{cliente}/edit | cliente.edit    | App\Http\Controllers\ClienteControlador@edit    | web          |
|        | GET|HEAD  | idade                  |                 | App\Http\Controllers\MeuControlador@getIdade    | web          |
|        | GET|HEAD  | multiplicar/{n1}/{n2}  |                 | App\Http\Controllers\MeuControlador@multiplicar | web          |
|        | GET|HEAD  | nome                   |                 | App\Http\Controllers\MeuControlador@getNome     | web          |
|        | GET|HEAD  | nomes/{id}             |                 | App\Http\Controllers\MeuControlador@getNomeByID | web          |
+--------+-----------+------------------------+-----------------+-------------------------------------------------+--------------+

